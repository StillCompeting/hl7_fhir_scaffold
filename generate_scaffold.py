#!/usr/bin/env python3
"""Regenerates stub mapping scripts for HL7 message types.

Edit `message_types` then run:

    python generate_scaffold.py
"""

import os, datetime, textwrap

message_types = [
    'ADT_A01', 'ADT_A03',
    'ORM_O01',
    'ORU_R01',
    'SIU_S12',
    'DFT_P03',
    'MDM_T02',
    'RDE_O11',
    'ACK',
    'QRY_A19'
]

script_template = """\"\"\"Convert HL7 {msg_type} message to FHIR Bundle.

Autogenerated scaffold. Replace the logic inside `hl7_to_fhir`
with a real fieldâ€‘level mapping.

Dependencies:
    pip install hl7apy fhir.resources
\"\"\"  # noqa: E501

from hl7apy import parser
from fhir.resources.bundle import Bundle

STUB_HL7_MESSAGE = \"\"\"MSH|^~\\\\&|SendingApp|SendingFac|ReceivingApp|ReceivingFac|{timestamp}||{msg_base}|123456|P|2.5
PID|1||12345^^^MR||Doe^John||19800101|M
\"\"\"  # noqa: E501


def hl7_to_fhir(hl7_str: str) -> Bundle:
    \"\"\"Stub converter. Extend this for full mapping.\"\"\"
    bundle = Bundle.construct()
    bundle.type = "message"
    bundle.meta = {{"tag": [{{"code": "{msg_type}"}}]}}
    return bundle


if __name__ == "__main__":
    bundle = hl7_to_fhir(
        STUB_HL7_MESSAGE
    )
    print(bundle.json(indent=2))
\n\n"""

def main():
    base_dir = os.path.dirname(os.path.abspath(__file__))
    scripts_dir = os.path.join(base_dir, 'scripts')
    os.makedirs(scripts_dir, exist_ok=True)
    timestamp = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
    for mt in message_types:
        msg_base = mt.split('_')[0]
        path = os.path.join(scripts_dir, f"map_{mt.lower()}.py")
        with open(path, 'w') as f:
            f.write(script_template.format(msg_type=mt, msg_base=msg_base, timestamp=timestamp))

if __name__ == "__main__":
    main()
